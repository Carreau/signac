master:

	- Make it simpler to use a custom Job class with a project.
	- Log, but do not reraise exceptions during MasterCrawler execution.
	- Provide default argument for '--indent' option for 'signac statepoint'
		command.

0.5.0:

	- General updates:

		- The performance of project indexing and crawling has been improved.

	- API changes:
		
		- New function: `signac.init_project()` simplifies project initialization
		within python
		- Added optional `root` argument to `signac.get_project()` to simplify
		getting a project handle outside of the current working directory
		- Added optional argument to `signac.get_project()`, to allow for projec
		- Added two class factory methods to `Project`: `get_project()` and
		`init_project()`

0.4.0

	- General updates:

		- The SignacProjectCrawler indexes all jobs, not only those with non-empty job documents.
		- Complete refactorization of the find_jobs() implementation based on internal DocumentSearchEngine.
		- The performance of find operations can be greatly improved by using pregenerated job indexes.

	- API changes:

		- New top-level commands: signac find, index, statepoint, and view
		- New method: Project.create_linked_view()
		- New method: Project.build_job_statepoint_index()
		- New method: Project.build_job_search_index()
		- find_jobs() allows to filter by job document.
		- fetch_one() returns None if no associated object can be fetched.
		- Remove previously deprecated keyword argument 'crawl' in index export functions.
		- Remove previously deprecated function common.config.write_config().

	- Documentation:

		- The tutorial is restructured into multiple parts.
		- Instructions for installation are separated from the guide.
		- The guide is updated to reflect recent changes.
		
0.3.0

	- Change license from MIT to BSD 3-clause license.
	- Add contributing agreement and guidelines.
			
0.2.9

	- API changes:

		- Addition of the `signac config` command line API.

	- New Features:

		- Password updates are encrypted with `bcrypt` when `passlib` is
		  installed.
	  - The user is prompted to enter missing credentials (username/password)
		  in case that they are not stored in the configuration.
		- The `signac confg` tool provides the ``--update-pw`` argument,
	    which allows users to update their own password.

	- Documentation:

		- Improved documentation on how to configure signac.

  - Bug fixes:

	  - Nested job statepoints can no longer get corrupted. This bug
		  occured when trying to operate on nested statepoint mappings.

	- Misc:

		- Added MIT license, in addition, all source code files contain a
			short licensing header.
		- The OSI classifiers are updated, including an upgrade of the
		  development status to '4 - beta'.
		- Deprecated pymongo versions 2.x are no longer supported.

0.2.8

	- API changes:

		- The `crawl()` function yields only the index documents
			and not a tuple of (_id, doc).
    - `export()` and `export_pymongo()` expect the index documents
		  as first argument, not a crawler instance. The old API
			is still supported, but will trigger a DeprecationWarning.
		- `Project` is now in the root namespace.
		- Add `index()` method to `Project`.
		- Add `create_access_module()` method to `Project`.
		- Add `find_variable_parameters()` method to `Project`.
		- Add `fn()` method to `Job`, which preprends the job's workspace path
		  to a filename.

 	- Improvements:

		- The documentation contains a comprehensive tutorial.

0.2.7

	- API changes:

		- Add `job.isfile()` method

	- Improvements:

		- Optimize `project.find_statepoints()` and `project.repair()` functions.

0.2.6

	- API changes:

		- Add `job.reset_statepoint()` and `job.update_statepoint()`
		- Add `job.remove()` function

	- Improvements:

		- Sanitize filter argument in `project.find_*()` methods
		- The `job.statepoint()` function accurately represents saved
		statepoints, e.g. tuples are represented as lists, as there is no
		difference between tuples and lists in json
		- signac-gui does not block on database operations
		- signac-gui allows reload of databases and collections of connected hosts

	- Bug fixes:

		- `RegexFileCrawler` `define()` class function only acts upon the actual
		specialization and not globally on all RegexFileCrawler classes
		- signac-gui does not crash when replica sets are configured

0.2.5

  - API changes:

		- Added `signac.get_project()`, `signac.get_database()`, `signac.fetch()` and `signac.fetch_one()` to top-level namespace.
		- Added basic shell commands, see `$ signac --help`.

  - New features:

		- Allow opening of jobs by id: `project.open_job(id='abc123...')`.
		- Mirror data while crawling.
		- Use extra sources for `fetch()` and `fetch_one()`.
		- Add file system handler: LocalFS, handler for local file system.
		- Add file system handler: GridFS, handler for MongoDB GridFS file system.
		- Crawler tags, to control which crawlers are used for a specific index.
		- Allow explicit job workspace creation through `job.init()`
		- Forwarding of pymongo host configuration via signac configuration.

  - Documentation:

		- Major reorganization of the documentation, split into: Overview, Guide, Quick Reference and API.
		- Add notes for system administrators about advanced indexing.

  - Misc

		- Warn about outdated pymongo versions.
		- Set zip_safe flag to true in setup.py.
		- Remove dependency on six module, by adding it to the common subpackage.

  - Bug Fixes:

		- Fixed hard import of pymongo bug (issue #24).
		- Crawler issues with malformed documents.

0.2.4

	- Implement repair() function for projects with corrupted workspaces.
	- Increase robustness of job manifest file creation.
	- Allow environment variables in workspace path definition.
	- Check and fix config permission errors.
	- Fix project crawler deep directory issue (hotfix).

0.2.3

	- Allow the definition of regex patterns for crawlers without regex
		compilation, but directly as pattern.
	- Account for NaN and Inf values while crwaling.
	- Fix a few bugs related to project views.

0.2.2

	 - Fix SignacProjectCrawler 'super()' bug.

0.2.1

	 - python 2.7 support
	 - gui (early alpha) included
	 - relative and default workspace paths
	 - create project views
	 - find_*() functions to search the workspace
	 - write and read state point hash tables

0.2.0

   - Initial release of 0.2.x series.
	 - Major consolidation of the package.
	 - Remove all hard dependencies, but six.
